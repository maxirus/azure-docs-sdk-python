### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datalake.analytics.job.models.UpdateJobParameters
  fullName: azure.mgmt.datalake.analytics.job.models.UpdateJobParameters
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.datalake.analytics.job.models
  name: UpdateJobParameters
  source:
    id: UpdateJobParameters
    path: azure-mgmt-datalake-analytics\azure\mgmt\datalake\analytics\job\models\update_job_parameters_py3.py
    remote:
      branch: master
      path: azure-mgmt-datalake-analytics\azure\mgmt\datalake\analytics\job\models\update_job_parameters_py3.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'The parameters that can be used to update existing Data Lake Analytics
    job

    information properties. (Only for use internally with Scope job type.).

    '
  syntax:
    content: 'UpdateJobParameters(*, degree_of_parallelism: int = None, priority:
      int = None, tags=None, **kwargs) -> None'
    parameters:
    - description: 'The degree of parallelism used for this job.

        This must be greater than 0, if set to less than 0 it will default to 1.

        '
      id: degree_of_parallelism
      type:
      - int
    - description: 'The priority value for the current job. Lower numbers

        have a higher priority. By default, a job has a priority of 1000. This

        must be greater than 0.

        '
      id: priority
      type:
      - int
    - description: 'The key-value pairs used to add additional metadata to the

        job information.

        '
      id: tags
      type:
      - dict[str, str]
  type: class
  uid: azure.mgmt.datalake.analytics.job.models.UpdateJobParameters
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
