### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.scheduler.models.ServiceBusMessage
  fullName: azure.mgmt.scheduler.models.ServiceBusMessage
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.scheduler.models
  name: ServiceBusMessage
  source:
    id: ServiceBusMessage
    path: azure-mgmt-scheduler\azure\mgmt\scheduler\models\service_bus_message_py3.py
    remote:
      branch: master
      path: azure-mgmt-scheduler\azure\mgmt\scheduler\models\service_bus_message_py3.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'ServiceBusMessage.

    '
  syntax:
    content: 'ServiceBusMessage(*, authentication=None, brokered_message_properties=None,
      custom_message_properties=None, message: str = None, namespace: str = None,
      transport_type=None, **kwargs) -> None'
    parameters:
    - description: 'Gets or sets the Service Bus authentication.

        '
      id: authentication
      type:
      - azure.mgmt.scheduler.models.ServiceBusAuthentication
    - description: 'Gets or sets the brokered message

        properties.

        '
      id: brokered_message_properties
      type:
      - azure.mgmt.scheduler.models.ServiceBusBrokeredMessageProperties
    - description: 'Gets or sets the custom message

        properties.

        '
      id: custom_message_properties
      type:
      - dict[str, str]
    - description: 'Gets or sets the message.

        '
      id: message
      type:
      - str
    - description: 'Gets or sets the namespace.

        '
      id: namespace
      type:
      - str
    - description: 'Gets or sets the transport type. Possible values

        include: ''NotSpecified'', ''NetMessaging'', ''AMQP''

        '
      id: transport_type
      type:
      - str
      - azure.mgmt.scheduler.models.ServiceBusTransportType
  type: class
  uid: azure.mgmt.scheduler.models.ServiceBusMessage
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
