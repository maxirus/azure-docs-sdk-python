### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.web.models.DiagnosticMetricSample
  fullName: azure.mgmt.web.models.DiagnosticMetricSample
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.web.models
  name: DiagnosticMetricSample
  source:
    id: DiagnosticMetricSample
    path: azure-mgmt-web\azure\mgmt\web\models\diagnostic_metric_sample.py
    remote:
      branch: master
      path: azure-mgmt-web\azure\mgmt\web\models\diagnostic_metric_sample.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'Class representing Diagnostic Metric.

    '
  syntax:
    content: DiagnosticMetricSample(timestamp=None, role_instance=None, total=None,
      maximum=None, minimum=None, is_aggregated=None)
    parameters:
    - description: 'Time at which metric is measured

        '
      id: timestamp
      type:
      - datetime
    - description: 'Role Instance. Null if this counter is not per

        instance

        This is returned and should be whichever instance name we desire to be

        returned

        i.e. CPU and Memory return RDWORKERNAME (LargeDed..._IN_0)

        where RDWORKERNAME is Machine name below and RoleInstance name in

        parenthesis

        '
      id: role_instance
      type:
      - str
    - description: 'Total value of the metric. If multiple measurements are made

        this will have sum of all.

        '
      id: total
      type:
      - float
    - description: 'Maximum of the metric sampled during the time period

        '
      id: maximum
      type:
      - float
    - description: 'Minimum of the metric sampled during the time period

        '
      id: minimum
      type:
      - float
    - description: 'Whether the values are aggregates across all workers

        or not

        '
      id: is_aggregated
      type:
      - bool
  type: class
  uid: azure.mgmt.web.models.DiagnosticMetricSample
references: []
