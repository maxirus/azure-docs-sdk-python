### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.compute.v2016_04_30_preview.models.VirtualMachineScaleSet
  fullName: azure.mgmt.compute.v2016_04_30_preview.models.VirtualMachineScaleSet
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.compute.v2016_04_30_preview.models.resource.Resource
  langs:
  - python
  module: azure.mgmt.compute.v2016_04_30_preview.models
  name: VirtualMachineScaleSet
  source:
    id: VirtualMachineScaleSet
    path: azure-mgmt-compute\azure\mgmt\compute\v2016_04_30_preview\models\virtual_machine_scale_set_py3.py
    remote:
      branch: master
      path: azure-mgmt-compute\azure\mgmt\compute\v2016_04_30_preview\models\virtual_machine_scale_set_py3.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'Describes a Virtual Machine Scale Set.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.

    '
  syntax:
    content: 'VirtualMachineScaleSet(*, location: str, tags=None, sku=None, plan=None,
      upgrade_policy=None, virtual_machine_profile=None, over_provision: bool = None,
      single_placement_group: bool = None, identity=None, **kwargs) -> None'
    parameters:
    - description: 'Required. Resource location

        '
      id: location
      type:
      - str
    - description: 'Resource tags

        '
      id: tags
      type:
      - dict[str, str]
    - description: 'The virtual machine scale set sku.

        '
      id: sku
      type:
      - azure.mgmt.compute.v2016_04_30_preview.models.Sku
    - description: 'Specifies information about the marketplace image used to

        create the virtual machine. This element is only used for marketplace

        images. Before you can use a marketplace image from an API, you must

        enable the image for programmatic use.  In the Azure portal, find the

        marketplace image that you want to use and then click **Want to deploy

        programmatically, Get Started ->**. Enter any required information and

        then click **Save**.

        '
      id: plan
      type:
      - azure.mgmt.compute.v2016_04_30_preview.models.Plan
    - description: 'The upgrade policy.

        '
      id: upgrade_policy
      type:
      - azure.mgmt.compute.v2016_04_30_preview.models.UpgradePolicy
    - description: 'The virtual machine profile.

        '
      id: virtual_machine_profile
      type:
      - azure.mgmt.compute.v2016_04_30_preview.models.VirtualMachineScaleSetVMProfile
    - description: 'Specifies whether the Virtual Machine Scale Set

        should be overprovisioned.

        '
      id: over_provision
      type:
      - bool
    - description: 'When true this limits the scale set to a

        single placement group, of max size 100 virtual machines.

        '
      id: single_placement_group
      type:
      - bool
    - description: 'The identity of the virtual machine scale set, if

        configured.

        '
      id: identity
      type:
      - azure.mgmt.compute.v2016_04_30_preview.models.VirtualMachineScaleSetIdentity
    variables:
    - description: 'Resource Id

        '
      id: id
      type:
      - str
    - description: 'Resource name

        '
      id: name
      type:
      - str
    - description: 'Resource type

        '
      id: type
      type:
      - str
    - description: 'The provisioning state, which only appears in

        the response.

        '
      id: provisioning_state
      type:
      - str
  type: class
  uid: azure.mgmt.compute.v2016_04_30_preview.models.VirtualMachineScaleSet
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
