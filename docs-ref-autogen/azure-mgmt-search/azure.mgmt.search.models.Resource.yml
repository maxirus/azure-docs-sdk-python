### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.search.models.Resource
  fullName: azure.mgmt.search.models.Resource
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.search.models
  name: Resource
  source:
    id: Resource
    path: azure-mgmt-search\azure\mgmt\search\models\resource_py3.py
    remote:
      branch: master
      path: azure-mgmt-search\azure\mgmt\search\models\resource_py3.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'Base type for all Azure resources.


    Variables are only populated by the server, and will be ignored when

    sending a request.

    '
  syntax:
    content: 'Resource(*, location: str = None, tags=None, **kwargs) -> None'
    parameters:
    - description: 'The geographic location of the resource. This must be one

        of the supported and registered Azure Geo Regions (for example, West US,

        East US, Southeast Asia, and so forth). This property is required when

        creating a new resource.

        '
      id: location
      type:
      - str
    - description: 'Tags to help categorize the resource in the Azure portal.

        '
      id: tags
      type:
      - dict[str, str]
    variables:
    - description: 'The ID of the resource. This can be used with the Azure Resource

        Manager to link resources together.

        '
      id: id
      type:
      - str
    - description: 'The name of the resource.

        '
      id: name
      type:
      - str
    - description: 'The resource type.

        '
      id: type
      type:
      - str
  type: class
  uid: azure.mgmt.search.models.Resource
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
