### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.keyvault.models.SecretItem
  fullName: azure.keyvault.models.SecretItem
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.keyvault.models
  name: SecretItem
  source:
    id: SecretItem
    path: azure-keyvault\azure\keyvault\models\secret_item_py3.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\models\secret_item_py3.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'The secret item containing secret metadata.


    Variables are only populated by the server, and will be ignored when

    sending a request.

    '
  syntax:
    content: 'SecretItem(*, id: str = None, attributes=None, tags=None, content_type:
      str = None, **kwargs) -> None'
    parameters:
    - description: 'Secret identifier.

        '
      id: id
      type:
      - str
    - description: 'The secret management attributes.

        '
      id: attributes
      type:
      - azure.keyvault.models.SecretAttributes
    - description: 'Application specific metadata in the form of key-value pairs.

        '
      id: tags
      type:
      - dict[str, str]
    - description: 'Type of the secret value such as a password.

        '
      id: content_type
      type:
      - str
    variables:
    - description: 'True if the secret''s lifetime is managed by key vault. If

        this is a key backing a certificate, then managed will be true.

        '
      id: managed
      type:
      - bool
  type: class
  uid: azure.keyvault.models.SecretItem
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
