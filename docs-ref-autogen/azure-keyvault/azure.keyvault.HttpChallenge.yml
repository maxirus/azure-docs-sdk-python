### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.keyvault.HttpChallenge.get_authorization_server
  - azure.keyvault.HttpChallenge.get_resource
  - azure.keyvault.HttpChallenge.get_scope
  - azure.keyvault.HttpChallenge.get_value
  - azure.keyvault.HttpChallenge.is_bearer_challenge
  - azure.keyvault.HttpChallenge.is_pop_challenge
  - azure.keyvault.HttpChallenge.supports_message_protection
  - azure.keyvault.HttpChallenge.supports_pop
  class: azure.keyvault.HttpChallenge
  fullName: azure.keyvault.HttpChallenge
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.keyvault
  name: HttpChallenge
  source:
    id: HttpChallenge
    path: azure-keyvault\azure\keyvault\custom\http_challenge.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\custom\http_challenge.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 12
  summary: '







    '
  syntax:
    content: HttpChallenge(request_uri, challenge, response_headers=None)
  type: class
  uid: azure.keyvault.HttpChallenge
- class: azure.keyvault.HttpChallenge
  fullName: azure.keyvault.HttpChallenge.get_authorization_server
  langs:
  - python
  module: azure.keyvault
  name: get_authorization_server
  source:
    id: get_authorization_server
    path: azure-keyvault\azure\keyvault\custom\http_challenge.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\custom\http_challenge.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 70
  summary: 'Returns the URI for the authorization server if present, otherwise empty
    string.

    '
  syntax:
    content: get_authorization_server()
    parameters: []
  type: method
  uid: azure.keyvault.HttpChallenge.get_authorization_server
- class: azure.keyvault.HttpChallenge
  fullName: azure.keyvault.HttpChallenge.get_resource
  langs:
  - python
  module: azure.keyvault
  name: get_resource
  source:
    id: get_resource
    path: azure-keyvault\azure\keyvault\custom\http_challenge.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\custom\http_challenge.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 79
  summary: 'Returns the resource if present, otherwise empty string.

    '
  syntax:
    content: get_resource()
    parameters: []
  type: method
  uid: azure.keyvault.HttpChallenge.get_resource
- class: azure.keyvault.HttpChallenge
  fullName: azure.keyvault.HttpChallenge.get_scope
  langs:
  - python
  module: azure.keyvault
  name: get_scope
  source:
    id: get_scope
    path: azure-keyvault\azure\keyvault\custom\http_challenge.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\custom\http_challenge.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 83
  summary: 'Returns the scope if present, otherwise empty string.

    '
  syntax:
    content: get_scope()
    parameters: []
  type: method
  uid: azure.keyvault.HttpChallenge.get_scope
- class: azure.keyvault.HttpChallenge
  fullName: azure.keyvault.HttpChallenge.get_value
  langs:
  - python
  module: azure.keyvault
  name: get_value
  source:
    id: get_value
    path: azure-keyvault\azure\keyvault\custom\http_challenge.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\custom\http_challenge.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 67
  syntax:
    content: get_value(key)
    parameters:
    - id: key
  type: method
  uid: azure.keyvault.HttpChallenge.get_value
- class: azure.keyvault.HttpChallenge
  fullName: azure.keyvault.HttpChallenge.is_bearer_challenge
  langs:
  - python
  module: azure.keyvault
  name: is_bearer_challenge
  source:
    id: is_bearer_challenge
    path: azure-keyvault\azure\keyvault\custom\http_challenge.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\custom\http_challenge.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 51
  summary: 'Tests whether the HttpChallenge a Bearer challenge.

    rtype: bool

    '
  syntax:
    content: is_bearer_challenge()
    parameters: []
  type: method
  uid: azure.keyvault.HttpChallenge.is_bearer_challenge
- class: azure.keyvault.HttpChallenge
  fullName: azure.keyvault.HttpChallenge.is_pop_challenge
  langs:
  - python
  module: azure.keyvault
  name: is_pop_challenge
  source:
    id: is_pop_challenge
    path: azure-keyvault\azure\keyvault\custom\http_challenge.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\custom\http_challenge.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 59
  summary: 'Tests whether the HttpChallenge is a proof of possession challenge.

    rtype: bool

    '
  syntax:
    content: is_pop_challenge()
    parameters: []
  type: method
  uid: azure.keyvault.HttpChallenge.is_pop_challenge
- class: azure.keyvault.HttpChallenge
  fullName: azure.keyvault.HttpChallenge.supports_message_protection
  langs:
  - python
  module: azure.keyvault
  name: supports_message_protection
  source:
    id: supports_message_protection
    path: azure-keyvault\azure\keyvault\custom\http_challenge.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\custom\http_challenge.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 91
  summary: 'Returns True if challenge vault supports message protection

    '
  syntax:
    content: supports_message_protection()
    parameters: []
  type: method
  uid: azure.keyvault.HttpChallenge.supports_message_protection
- class: azure.keyvault.HttpChallenge
  fullName: azure.keyvault.HttpChallenge.supports_pop
  langs:
  - python
  module: azure.keyvault
  name: supports_pop
  source:
    id: supports_pop
    path: azure-keyvault\azure\keyvault\custom\http_challenge.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\custom\http_challenge.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 87
  summary: 'Returns True if challenge supports pop token auth else False

    '
  syntax:
    content: supports_pop()
    parameters: []
  type: method
  uid: azure.keyvault.HttpChallenge.supports_pop
references:
- fullName: azure.keyvault.HttpChallenge.get_authorization_server
  isExternal: false
  name: get_authorization_server
  parent: azure.keyvault.HttpChallenge
  uid: azure.keyvault.HttpChallenge.get_authorization_server
- fullName: azure.keyvault.HttpChallenge.get_resource
  isExternal: false
  name: get_resource
  parent: azure.keyvault.HttpChallenge
  uid: azure.keyvault.HttpChallenge.get_resource
- fullName: azure.keyvault.HttpChallenge.get_scope
  isExternal: false
  name: get_scope
  parent: azure.keyvault.HttpChallenge
  uid: azure.keyvault.HttpChallenge.get_scope
- fullName: azure.keyvault.HttpChallenge.get_value
  isExternal: false
  name: get_value
  parent: azure.keyvault.HttpChallenge
  uid: azure.keyvault.HttpChallenge.get_value
- fullName: azure.keyvault.HttpChallenge.is_bearer_challenge
  isExternal: false
  name: is_bearer_challenge
  parent: azure.keyvault.HttpChallenge
  uid: azure.keyvault.HttpChallenge.is_bearer_challenge
- fullName: azure.keyvault.HttpChallenge.is_pop_challenge
  isExternal: false
  name: is_pop_challenge
  parent: azure.keyvault.HttpChallenge
  uid: azure.keyvault.HttpChallenge.is_pop_challenge
- fullName: azure.keyvault.HttpChallenge.supports_message_protection
  isExternal: false
  name: supports_message_protection
  parent: azure.keyvault.HttpChallenge
  uid: azure.keyvault.HttpChallenge.supports_message_protection
- fullName: azure.keyvault.HttpChallenge.supports_pop
  isExternal: false
  name: supports_pop
  parent: azure.keyvault.HttpChallenge
  uid: azure.keyvault.HttpChallenge.supports_pop
