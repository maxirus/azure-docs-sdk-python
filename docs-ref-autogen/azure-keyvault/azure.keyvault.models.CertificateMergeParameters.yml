### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.keyvault.models.CertificateMergeParameters
  fullName: azure.keyvault.models.CertificateMergeParameters
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.keyvault.models
  name: CertificateMergeParameters
  source:
    id: CertificateMergeParameters
    path: azure-keyvault\azure\keyvault\models\certificate_merge_parameters_py3.py
    remote:
      branch: master
      path: azure-keyvault\azure\keyvault\models\certificate_merge_parameters_py3.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'The certificate merge parameters.


    All required parameters must be populated in order to send to Azure.

    '
  syntax:
    content: CertificateMergeParameters(*, x509_certificates, certificate_attributes=None,
      tags=None, **kwargs) -> None
    parameters:
    - description: 'Required. The certificate or the certificate

        chain to merge.

        '
      id: x509_certificates
      type:
      - list[bytearray]
    - description: 'The attributes of the certificate

        (optional).

        '
      id: certificate_attributes
      type:
      - azure.keyvault.models.CertificateAttributes
    - description: 'Application specific metadata in the form of key-value pairs.

        '
      id: tags
      type:
      - dict[str, str]
  type: class
  uid: azure.keyvault.models.CertificateMergeParameters
references:
- fullName: list[bytearray]
  name: list[bytearray]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: bytearray
    name: bytearray
    uid: bytearray
  - fullName: ']'
    name: ']'
  uid: list[bytearray]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
