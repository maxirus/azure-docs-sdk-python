### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.create_checkpoint_if_not_exists_async
  - azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.create_checkpoint_store_if_not_exists_async
  - azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.delete_checkpoint_async
  - azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.get_checkpoint_async
  - azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.update_checkpoint_async
  class: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  inheritance:
  - inheritance:
    - type: builtins.object
    type: abc.ABC
  langs:
  - python
  module: azure.eventprocessorhost.abstract_checkpoint_manager
  name: AbstractCheckpointManager
  source:
    id: AbstractCheckpointManager
    path: azure\eventprocessorhost\abstract_checkpoint_manager.py
    remote:
      branch: master
      path: azure\eventprocessorhost\abstract_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 11
  summary: 'If you wish to have EventProcessorHost store checkpoints somewhere other
    than Azure Storage,

    you can write your own checkpoint manager using this abstract class.






    '
  syntax:
    content: AbstractCheckpointManager()
  type: class
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
- class: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.create_checkpoint_if_not_exists_async
  langs:
  - python
  module: azure.eventprocessorhost.abstract_checkpoint_manager
  name: create_checkpoint_if_not_exists_async
  source:
    id: create_checkpoint_if_not_exists_async
    path: azure\eventprocessorhost\abstract_checkpoint_manager.py
    remote:
      branch: master
      path: azure\eventprocessorhost\abstract_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 43
  summary: 'Create the given partition checkpoint if it doesn''t exist.Do nothing
    if it does exist.

    The offset/sequenceNumber for a freshly-created checkpoint should be set to StartOfStream/0.

    '
  syntax:
    content: create_checkpoint_if_not_exists_async(partition_id)
    parameters:
    - description: 'The ID of a given parition.

        '
      id: partition_id
      type:
      - str
    return:
      description: 'The checkpoint for the given partition, whether newly created
        or already existing.

        '
      type:
      - azure.eventprocessorhost.checkpoint.Checkpoint
  type: method
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.create_checkpoint_if_not_exists_async
- class: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.create_checkpoint_store_if_not_exists_async
  langs:
  - python
  module: azure.eventprocessorhost.abstract_checkpoint_manager
  name: create_checkpoint_store_if_not_exists_async
  source:
    id: create_checkpoint_store_if_not_exists_async
    path: azure\eventprocessorhost\abstract_checkpoint_manager.py
    remote:
      branch: master
      path: azure\eventprocessorhost\abstract_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 19
  summary: 'Create the checkpoint store if it doesn''t exist. Do nothing if it does
    exist.

    '
  syntax:
    content: create_checkpoint_store_if_not_exists_async()
    parameters: []
    return:
      description: '*True* if the checkpoint store already exists or was created OK,
        *False*

        if there was a failure.

        '
      type:
      - bool
  type: method
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.create_checkpoint_store_if_not_exists_async
- class: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.delete_checkpoint_async
  langs:
  - python
  module: azure.eventprocessorhost.abstract_checkpoint_manager
  name: delete_checkpoint_async
  source:
    id: delete_checkpoint_async
    path: azure\eventprocessorhost\abstract_checkpoint_manager.py
    remote:
      branch: master
      path: azure\eventprocessorhost\abstract_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 68
  summary: 'Delete the stored checkpoint for the given partition. If there is no stored
    checkpoint

    for the given partition, that is treated as success.

    '
  syntax:
    content: delete_checkpoint_async(partition_id)
    parameters:
    - description: 'The ID of a given parition.

        '
      id: partition_id
      type:
      - str
  type: method
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.delete_checkpoint_async
- class: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.get_checkpoint_async
  langs:
  - python
  module: azure.eventprocessorhost.abstract_checkpoint_manager
  name: get_checkpoint_async
  source:
    id: get_checkpoint_async
    path: azure\eventprocessorhost\abstract_checkpoint_manager.py
    remote:
      branch: master
      path: azure\eventprocessorhost\abstract_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 30
  summary: 'Get the checkpoint data associated with the given partition.

    Could return null if no checkpoint has been created for that partition.

    '
  syntax:
    content: get_checkpoint_async(partition_id)
    parameters:
    - description: 'The ID of a given parition.

        '
      id: partition_id
      type:
      - str
    return:
      description: 'Given partition checkpoint info, or *None* if none has been previously
        stored.

        '
      type:
      - azure.eventprocessorhost.checkpoint.Checkpoint
  type: method
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.get_checkpoint_async
- class: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.update_checkpoint_async
  langs:
  - python
  module: azure.eventprocessorhost.abstract_checkpoint_manager
  name: update_checkpoint_async
  source:
    id: update_checkpoint_async
    path: azure\eventprocessorhost\abstract_checkpoint_manager.py
    remote:
      branch: master
      path: azure\eventprocessorhost\abstract_checkpoint_manager.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 56
  summary: 'Update the checkpoint in the store with the offset/sequenceNumber in the
    provided checkpoint.

    '
  syntax:
    content: update_checkpoint_async(lease, checkpoint)
    parameters:
    - description: 'The lease to be updated.

        '
      id: lease
      type:
      - azure.eventprocessorhost.lease.Lease
    - description: 'offset/sequeceNumber to update the store with.

        '
      id: checkpoint
      type:
      - azure.eventprocessorhost.checkpoint.Checkpoint
  type: method
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.update_checkpoint_async
references:
- fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.create_checkpoint_if_not_exists_async
  isExternal: false
  name: create_checkpoint_if_not_exists_async
  parent: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.create_checkpoint_if_not_exists_async
- fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.create_checkpoint_store_if_not_exists_async
  isExternal: false
  name: create_checkpoint_store_if_not_exists_async
  parent: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.create_checkpoint_store_if_not_exists_async
- fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.delete_checkpoint_async
  isExternal: false
  name: delete_checkpoint_async
  parent: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.delete_checkpoint_async
- fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.get_checkpoint_async
  isExternal: false
  name: get_checkpoint_async
  parent: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.get_checkpoint_async
- fullName: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.update_checkpoint_async
  isExternal: false
  name: update_checkpoint_async
  parent: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager
  uid: azure.eventprocessorhost.abstract_checkpoint_manager.AbstractCheckpointManager.update_checkpoint_async
