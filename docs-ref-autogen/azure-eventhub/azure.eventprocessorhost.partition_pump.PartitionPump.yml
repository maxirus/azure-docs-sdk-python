### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventprocessorhost.partition_pump.PartitionPump.close_async
  - azure.eventprocessorhost.partition_pump.PartitionPump.is_closing
  - azure.eventprocessorhost.partition_pump.PartitionPump.on_closing_async
  - azure.eventprocessorhost.partition_pump.PartitionPump.on_open_async
  - azure.eventprocessorhost.partition_pump.PartitionPump.open_async
  - azure.eventprocessorhost.partition_pump.PartitionPump.process_error_async
  - azure.eventprocessorhost.partition_pump.PartitionPump.process_events_async
  - azure.eventprocessorhost.partition_pump.PartitionPump.run
  - azure.eventprocessorhost.partition_pump.PartitionPump.set_lease
  - azure.eventprocessorhost.partition_pump.PartitionPump.set_pump_status
  class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: PartitionPump
  source:
    id: PartitionPump
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 15
  summary: 'Manages individual connection to a given partition.











    '
  syntax:
    content: PartitionPump(host, lease)
  type: class
  uid: azure.eventprocessorhost.partition_pump.PartitionPump
- class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump.close_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: close_async
  source:
    id: close_async
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 91
  summary: 'Safely closes the pump.

    '
  syntax:
    content: close_async(reason)
    parameters:
    - description: 'The reason for the shutdown.

        '
      id: reason
      type:
      - str
  type: method
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.close_async
- class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump.is_closing
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: is_closing
  source:
    id: is_closing
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 83
  summary: 'Returns whether pump is closing.

    '
  syntax:
    content: is_closing()
    parameters: []
    return:
      type:
      - bool
  type: method
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.is_closing
- class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump.on_closing_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: on_closing_async
  source:
    id: on_closing_async
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 124
  summary: 'Event handler for on closing event.

    '
  syntax:
    content: on_closing_async(reason)
    parameters:
    - description: 'The reason for the shutdown.

        '
      id: reason
      type:
      - str
  type: method
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.on_closing_async
- class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump.on_open_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: on_open_async
  source:
    id: on_open_async
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 76
  summary: 'Event handler for on open event.

    '
  syntax:
    content: on_open_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.on_open_async
- class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump.open_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: open_async
  source:
    id: open_async
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 52
  summary: 'Opens partition pump.

    '
  syntax:
    content: open_async()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.open_async
- class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump.process_error_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: process_error_async
  source:
    id: process_error_async
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 154
  summary: 'Passes error to the event processor for processing.

    '
  syntax:
    content: process_error_async(error)
    parameters:
    - description: 'An error the occurred.

        '
      id: error
      type:
      - Exception
  type: method
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.process_error_async
- class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump.process_events_async
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: process_events_async
  source:
    id: process_events_async
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 134
  summary: 'Process pump events.

    '
  syntax:
    content: process_events_async(events)
    parameters:
    - description: 'List of events to be processed.

        '
      id: events
      type:
      - list[azure.eventhub.common.EventData]
  type: method
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.process_events_async
- class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump.run
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: run
  source:
    id: run
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 28
  summary: 'Makes pump sync so that it can be run in a thread.

    '
  syntax:
    content: run()
    parameters: []
  type: method
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.run
- class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump.set_lease
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: set_lease
  source:
    id: set_lease
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 42
  summary: 'Sets a new partition lease to be processed by the pump.

    '
  syntax:
    content: set_lease(new_lease)
    parameters:
    - description: 'The lease to set.

        '
      id: lease
      type:
      - azure.eventprocessorhost.lease.Lease
  type: method
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.set_lease
- class: azure.eventprocessorhost.partition_pump.PartitionPump
  fullName: azure.eventprocessorhost.partition_pump.PartitionPump.set_pump_status
  langs:
  - python
  module: azure.eventprocessorhost.partition_pump
  name: set_pump_status
  source:
    id: set_pump_status
    path: azure\eventprocessorhost\partition_pump.py
    remote:
      branch: master
      path: azure\eventprocessorhost\partition_pump.py
      repo: https://github.com/Azure/azure-event-hubs-python.git
    startLine: 35
  summary: 'Updates pump status and logs update to console.

    '
  syntax:
    content: set_pump_status(status)
    parameters:
    - id: status
  type: method
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.set_pump_status
references:
- fullName: azure.eventprocessorhost.partition_pump.PartitionPump.close_async
  isExternal: false
  name: close_async
  parent: azure.eventprocessorhost.partition_pump.PartitionPump
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.close_async
- fullName: azure.eventprocessorhost.partition_pump.PartitionPump.is_closing
  isExternal: false
  name: is_closing
  parent: azure.eventprocessorhost.partition_pump.PartitionPump
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.is_closing
- fullName: azure.eventprocessorhost.partition_pump.PartitionPump.on_closing_async
  isExternal: false
  name: on_closing_async
  parent: azure.eventprocessorhost.partition_pump.PartitionPump
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.on_closing_async
- fullName: azure.eventprocessorhost.partition_pump.PartitionPump.on_open_async
  isExternal: false
  name: on_open_async
  parent: azure.eventprocessorhost.partition_pump.PartitionPump
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.on_open_async
- fullName: azure.eventprocessorhost.partition_pump.PartitionPump.open_async
  isExternal: false
  name: open_async
  parent: azure.eventprocessorhost.partition_pump.PartitionPump
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.open_async
- fullName: azure.eventprocessorhost.partition_pump.PartitionPump.process_error_async
  isExternal: false
  name: process_error_async
  parent: azure.eventprocessorhost.partition_pump.PartitionPump
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.process_error_async
- fullName: azure.eventprocessorhost.partition_pump.PartitionPump.process_events_async
  isExternal: false
  name: process_events_async
  parent: azure.eventprocessorhost.partition_pump.PartitionPump
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.process_events_async
- fullName: azure.eventprocessorhost.partition_pump.PartitionPump.run
  isExternal: false
  name: run
  parent: azure.eventprocessorhost.partition_pump.PartitionPump
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.run
- fullName: azure.eventprocessorhost.partition_pump.PartitionPump.set_lease
  isExternal: false
  name: set_lease
  parent: azure.eventprocessorhost.partition_pump.PartitionPump
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.set_lease
- fullName: azure.eventprocessorhost.partition_pump.PartitionPump.set_pump_status
  isExternal: false
  name: set_pump_status
  parent: azure.eventprocessorhost.partition_pump.PartitionPump
  uid: azure.eventprocessorhost.partition_pump.PartitionPump.set_pump_status
- fullName: list[azure.eventhub.common.EventData]
  name: list[EventData]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.eventhub.common.EventData
    name: EventData
    uid: azure.eventhub.common.EventData
  - fullName: ']'
    name: ']'
  uid: list[azure.eventhub.common.EventData]
