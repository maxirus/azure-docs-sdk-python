### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datafactory.models.Trigger
  fullName: azure.mgmt.datafactory.models.Trigger
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.datafactory.models
  name: Trigger
  source:
    id: Trigger
    path: azure-mgmt-datafactory\azure\mgmt\datafactory\models\trigger.py
    remote:
      branch: master
      path: azure-mgmt-datafactory\azure\mgmt\datafactory\models\trigger.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'Azure data factory nested object which contains information about creating

    pipeline run.


    You probably want to use the sub-classes and not this class directly. Known

    sub-classes are: TumblingWindowTrigger, MultiplePipelineTrigger


    Variables are only populated by the server, and will be ignored when

    sending a request.

    '
  syntax:
    content: Trigger(additional_properties=None, description=None)
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection

        '
      id: additional_properties
      type:
      - dict[str, object]
    - description: 'Trigger description.

        '
      id: description
      type:
      - str
    - description: 'Constant filled by server.

        '
      id: type
      type:
      - str
    variables:
    - description: 'Indicates if trigger is running or not. Updated when

        Start/Stop APIs are called on the Trigger. Possible values include:

        ''Started'', ''Stopped'', ''Disabled''

        '
      id: runtime_state
      type:
      - str
      - azure.mgmt.datafactory.models.TriggerRuntimeState
  type: class
  uid: azure.mgmt.datafactory.models.Trigger
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
