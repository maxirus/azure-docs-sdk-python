### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datafactory.models.SapEccSource
  fullName: azure.mgmt.datafactory.models.SapEccSource
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.datafactory.models.copy_source.CopySource
  langs:
  - python
  module: azure.mgmt.datafactory.models
  name: SapEccSource
  source:
    id: SapEccSource
    path: azure-mgmt-datafactory\azure\mgmt\datafactory\models\sap_ecc_source.py
    remote:
      branch: master
      path: azure-mgmt-datafactory\azure\mgmt\datafactory\models\sap_ecc_source.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'A copy activity source for SAP ECC source.

    '
  syntax:
    content: SapEccSource(additional_properties=None, source_retry_count=None, source_retry_wait=None,
      query=None)
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection

        '
      id: additional_properties
      type:
      - dict[str, object]
    - description: 'Source retry count. Type: integer (or

        Expression with resultType integer).

        '
      id: source_retry_count
      type:
      - object
    - description: 'Source retry wait. Type: string (or Expression

        with resultType string), pattern:

        ((d+).)?(dd):(60|([0-5][0-9])):(60|([0-5][0-9])).

        '
      id: source_retry_wait
      type:
      - object
    - description: 'Constant filled by server.

        '
      id: type
      type:
      - str
    - description: 'SAP ECC OData query. For example, "$top=1". Type: string (or

        Expression with resultType string).

        '
      id: query
      type:
      - str
  type: class
  uid: azure.mgmt.datafactory.models.SapEccSource
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
