### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datafactory.models.ActivityPolicy
  fullName: azure.mgmt.datafactory.models.ActivityPolicy
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.datafactory.models
  name: ActivityPolicy
  source:
    id: ActivityPolicy
    path: azure-mgmt-datafactory\azure\mgmt\datafactory\models\activity_policy.py
    remote:
      branch: master
      path: azure-mgmt-datafactory\azure\mgmt\datafactory\models\activity_policy.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'Execution policy for an activity.

    '
  syntax:
    content: ActivityPolicy(additional_properties=None, timeout=None, retry=None,
      retry_interval_in_seconds=None, secure_output=None)
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection

        '
      id: additional_properties
      type:
      - dict[str, object]
    - description: 'Specifies the timeout for the activity to run. The default

        timeout is 7 days. Type: string (or Expression with resultType string),

        pattern: ((d+).)?(dd):(60|([0-5][0-9])):(60|([0-5][0-9])).

        '
      id: timeout
      type:
      - object
    - description: 'Maximum ordinary retry attempts. Default is 0. Type: integer

        (or Expression with resultType integer), minimum: 0.

        '
      id: retry
      type:
      - object
    - description: 'Interval between each retry attempt (in

        seconds). The default is 30 sec.

        '
      id: retry_interval_in_seconds
      type:
      - int
    - description: 'When set to true, Output from activity is considered

        as secure and will not be logged to monitoring.

        '
      id: secure_output
      type:
      - bool
  type: class
  uid: azure.mgmt.datafactory.models.ActivityPolicy
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
