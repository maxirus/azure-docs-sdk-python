### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datafactory.models.ScheduleTriggerRecurrence
  fullName: azure.mgmt.datafactory.models.ScheduleTriggerRecurrence
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.datafactory.models
  name: ScheduleTriggerRecurrence
  source:
    id: ScheduleTriggerRecurrence
    path: azure-mgmt-datafactory\azure\mgmt\datafactory\models\schedule_trigger_recurrence.py
    remote:
      branch: master
      path: azure-mgmt-datafactory\azure\mgmt\datafactory\models\schedule_trigger_recurrence.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'The workflow trigger recurrence.

    '
  syntax:
    content: ScheduleTriggerRecurrence(additional_properties=None, frequency=None,
      interval=None, start_time=None, end_time=None, time_zone=None, schedule=None)
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection

        '
      id: additional_properties
      type:
      - dict[str, object]
    - description: 'The frequency. Possible values include: ''NotSpecified'',

        ''Minute'', ''Hour'', ''Day'', ''Week'', ''Month'', ''Year''

        '
      id: frequency
      type:
      - str
      - azure.mgmt.datafactory.models.RecurrenceFrequency
    - description: 'The interval.

        '
      id: interval
      type:
      - int
    - description: 'The start time.

        '
      id: start_time
      type:
      - datetime
    - description: 'The end time.

        '
      id: end_time
      type:
      - datetime
    - description: 'The time zone.

        '
      id: time_zone
      type:
      - str
    - description: 'The recurrence schedule.

        '
      id: schedule
      type:
      - azure.mgmt.datafactory.models.RecurrenceSchedule
  type: class
  uid: azure.mgmt.datafactory.models.ScheduleTriggerRecurrence
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
