### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_by_domain
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_by_domain_in_stream
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_in_stream
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.describe_image
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.describe_image_in_stream
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.generate_thumbnail
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.generate_thumbnail_in_stream
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.get_text_operation_result
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.list_models
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_printed_text
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_printed_text_in_stream
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_text
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_text_in_stream
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.tag_image
  - azure.cognitiveservices.vision.computervision.ComputerVisionAPI.tag_image_in_stream
  class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.service_client.SDKClient
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: ComputerVisionAPI
  source:
    id: ComputerVisionAPI
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 54
  summary: 'The Computer Vision API provides state-of-the-art algorithms to process
    images and return information. For example, it can be used to determine if an
    image contains mature content, or it can be used to find all the faces in an image.  It
    also has other features like estimating dominant and accent colors, categorizing
    the content of images, and describing an image with complete English sentences.  Additionally,
    it can also intelligently generate images thumbnails for displaying large images
    effectively.

















    '
  syntax:
    content: ComputerVisionAPI(azure_region, credentials)
    parameters:
    - description: 'Supported Azure regions for Cognitive Services

        endpoints. Possible values include: ''westus'', ''westeurope'',

        ''southeastasia'', ''eastus2'', ''westcentralus'', ''westus2'', ''eastus'',

        ''southcentralus'', ''northeurope'', ''eastasia'', ''australiaeast'',

        ''brazilsouth''

        '
      id: azure_region
      type:
      - str
      - azure.cognitiveservices.vision.computervision.models.AzureRegions
    - description: 'Subscription credentials which uniquely identify

        client subscription.

        '
      id: credentials
      type:
      - None
    variables:
    - description: 'Configuration for client.

        '
      id: config
      type:
      - ComputerVisionAPIConfiguration
  type: class
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: analyze_image
  source:
    id: analyze_image
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 140
  summary: 'This operation extracts a rich set of visual features based on the

    image content. Two input methods are supported -- (1) Uploading an

    image or (2) specifying an image URL.  Within your request, there is an

    optional parameter to allow you to choose which features to return.  By

    default, image categories are returned in the response.

    '
  syntax:
    content: analyze_image(url, visual_features=None, details=None, language='en',
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Publicly reachable URL of an image

        '
      id: url
      type:
      - str
    - defaultValue: None
      description: 'A string indicating what visual feature types

        to return. Multiple values should be comma-separated. Valid visual

        feature types include:Categories - categorizes image content according

        to a taxonomy defined in documentation. Tags - tags the image with a

        detailed list of words related to the image content. Description -

        describes the image content with a complete English sentence. Faces -

        detects if faces are present. If present, generate coordinates, gender

        and age. ImageType - detects if image is clipart or a line drawing.

        Color - determines the accent color, dominant color, and whether an

        image is black&white.Adult - detects if the image is pornographic in

        nature (depicts nudity or a sex act).  Sexually suggestive content is

        also detected.

        '
      id: visual_features
      type:
      - list[str
      - azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes]
    - defaultValue: None
      description: 'A string indicating which domain-specific details to

        return. Multiple values should be comma-separated. Valid visual

        feature types include:Celebrities - identifies celebrities if detected

        in the image.

        '
      id: details
      type:
      - list[str
      - azure.cognitiveservices.vision.computervision.models.Details]
    - defaultValue: en
      description: 'The desired language for output generation. If this

        parameter is not specified, the default value is

        &quot;en&quot;.Supported languages:en - English, Default. es -

        Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese.

        Possible values include: ''en'', ''es'', ''ja'', ''pt'', ''zh''

        '
      id: language
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ImageAnalysis or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.ImageAnalysis
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_by_domain
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: analyze_image_by_domain
  source:
    id: analyze_image_by_domain
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 550
  summary: 'This operation recognizes content within an image by applying a

    domain-specific model.  The list of domain-specific models that are

    supported by the Computer Vision API can be retrieved using the /models

    GET request.  Currently, the API only provides a single domain-specific

    model: celebrities. Two input methods are supported -- (1) Uploading an

    image or (2) specifying an image URL. A successful response will be

    returned in JSON.  If the request failed, the response will contain an

    error code and a message to help understand what went wrong.

    '
  syntax:
    content: analyze_image_by_domain(model, url, language='en', custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'The domain-specific content to recognize.

        '
      id: model
      type:
      - str
    - description: 'Publicly reachable URL of an image

        '
      id: url
      type:
      - str
    - defaultValue: en
      description: 'The desired language for output generation. If this

        parameter is not specified, the default value is

        &quot;en&quot;.Supported languages:en - English, Default. es -

        Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese.

        Possible values include: ''en'', ''es'', ''ja'', ''pt'', ''zh''

        '
      id: language
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'DomainModelResults or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.DomainModelResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_by_domain
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_by_domain_in_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: analyze_image_by_domain_in_stream
  source:
    id: analyze_image_by_domain_in_stream
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1161
  summary: 'This operation recognizes content within an image by applying a

    domain-specific model.  The list of domain-specific models that are

    supported by the Computer Vision API can be retrieved using the /models

    GET request.  Currently, the API only provides a single domain-specific

    model: celebrities. Two input methods are supported -- (1) Uploading an

    image or (2) specifying an image URL. A successful response will be

    returned in JSON.  If the request failed, the response will contain an

    error code and a message to help understand what went wrong.

    '
  syntax:
    content: analyze_image_by_domain_in_stream(model, image, language='en', custom_headers=None,
      raw=False, callback=None, **operation_config)
    parameters:
    - description: 'The domain-specific content to recognize.

        '
      id: model
      type:
      - str
    - description: 'An image stream.

        '
      id: image
      type:
      - Generator
    - defaultValue: en
      description: 'The desired language for output generation. If this

        parameter is not specified, the default value is

        &quot;en&quot;.Supported languages:en - English, Default. es -

        Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese.

        Possible values include: ''en'', ''es'', ''ja'', ''pt'', ''zh''

        '
      id: language
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.

        '
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'DomainModelResults or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.DomainModelResults
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_by_domain_in_stream
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_in_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: analyze_image_in_stream
  source:
    id: analyze_image_in_stream
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 745
  summary: 'This operation extracts a rich set of visual features based on the

    image content.

    '
  syntax:
    content: analyze_image_in_stream(image, visual_features=None, details=None, language='en',
      custom_headers=None, raw=False, callback=None, **operation_config)
    parameters:
    - description: 'An image stream.

        '
      id: image
      type:
      - Generator
    - defaultValue: None
      description: 'A string indicating what visual feature types

        to return. Multiple values should be comma-separated. Valid visual

        feature types include:Categories - categorizes image content according

        to a taxonomy defined in documentation. Tags - tags the image with a

        detailed list of words related to the image content. Description -

        describes the image content with a complete English sentence. Faces -

        detects if faces are present. If present, generate coordinates, gender

        and age. ImageType - detects if image is clipart or a line drawing.

        Color - determines the accent color, dominant color, and whether an

        image is black&white.Adult - detects if the image is pornographic in

        nature (depicts nudity or a sex act).  Sexually suggestive content is

        also detected.

        '
      id: visual_features
      type:
      - list[str
      - azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes]
    - defaultValue: None
      description: 'A string indicating which domain-specific details to

        return. Multiple values should be comma-separated. Valid visual

        feature types include:Celebrities - identifies celebrities if detected

        in the image. Possible values include: ''Celebrities'', ''Landmarks''

        '
      id: details
      type:
      - str
    - defaultValue: en
      description: 'The desired language for output generation. If this

        parameter is not specified, the default value is

        &quot;en&quot;.Supported languages:en - English, Default. es -

        Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese.

        Possible values include: ''en'', ''es'', ''ja'', ''pt'', ''zh''

        '
      id: language
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.

        '
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ImageAnalysis or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.ImageAnalysis
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_in_stream
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.describe_image
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: describe_image
  source:
    id: describe_image
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 396
  summary: 'This operation generates a description of an image in human readable

    language with complete sentences.  The description is based on a

    collection of content tags, which are also returned by the operation.

    More than one description can be generated for each image.

    Descriptions are ordered by their confidence score. All descriptions

    are in English. Two input methods are supported -- (1) Uploading an

    image or (2) specifying an image URL.A successful response will be

    returned in JSON.  If the request failed, the response will contain an

    error code and a message to help understand what went wrong.

    '
  syntax:
    content: describe_image(url, max_candidates='1', language='en', custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Publicly reachable URL of an image

        '
      id: url
      type:
      - str
    - defaultValue: '1'
      description: 'Maximum number of candidate descriptions to be

        returned.  The default is 1.

        '
      id: max_candidates
      type:
      - str
    - defaultValue: en
      description: 'The desired language for output generation. If this

        parameter is not specified, the default value is

        &quot;en&quot;.Supported languages:en - English, Default. es -

        Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese.

        Possible values include: ''en'', ''es'', ''ja'', ''pt'', ''zh''

        '
      id: language
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ImageDescription or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.ImageDescription
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.describe_image
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.describe_image_in_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: describe_image_in_stream
  source:
    id: describe_image_in_stream
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1001
  summary: 'This operation generates a description of an image in human readable

    language with complete sentences.  The description is based on a

    collection of content tags, which are also returned by the operation.

    More than one description can be generated for each image.

    Descriptions are ordered by their confidence score. All descriptions

    are in English. Two input methods are supported -- (1) Uploading an

    image or (2) specifying an image URL.A successful response will be

    returned in JSON.  If the request failed, the response will contain an

    error code and a message to help understand what went wrong.

    '
  syntax:
    content: describe_image_in_stream(image, max_candidates='1', language='en', custom_headers=None,
      raw=False, callback=None, **operation_config)
    parameters:
    - description: 'An image stream.

        '
      id: image
      type:
      - Generator
    - defaultValue: '1'
      description: 'Maximum number of candidate descriptions to be

        returned.  The default is 1.

        '
      id: max_candidates
      type:
      - str
    - defaultValue: en
      description: 'The desired language for output generation. If this

        parameter is not specified, the default value is

        &quot;en&quot;.Supported languages:en - English, Default. es -

        Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese.

        Possible values include: ''en'', ''es'', ''ja'', ''pt'', ''zh''

        '
      id: language
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.

        '
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ImageDescription or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.ImageDescription
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.describe_image_in_stream
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.generate_thumbnail
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: generate_thumbnail
  source:
    id: generate_thumbnail
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 235
  summary: 'This operation generates a thumbnail image with the user-specified

    width and height. By default, the service analyzes the image,

    identifies the region of interest (ROI), and generates smart cropping

    coordinates based on the ROI. Smart cropping helps when you specify an

    aspect ratio that differs from that of the input image. A successful

    response contains the thumbnail image binary. If the request failed,

    the response contains an error code and a message to help determine

    what went wrong.

    '
  syntax:
    content: generate_thumbnail(width, height, url, smart_cropping=False, custom_headers=None,
      raw=False, callback=None, **operation_config)
    parameters:
    - description: 'Width of the thumbnail. It must be between 1 and 1024.

        Recommended minimum of 50.

        '
      id: width
      type:
      - int
    - description: 'Height of the thumbnail. It must be between 1 and 1024.

        Recommended minimum of 50.

        '
      id: height
      type:
      - int
    - description: 'Publicly reachable URL of an image

        '
      id: url
      type:
      - str
    - defaultValue: 'False'
      description: 'Boolean flag for enabling smart cropping.

        '
      id: smart_cropping
      type:
      - bool
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.

        '
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'object or ClientRawResponse if raw=true

        '
      type:
      - Generator
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.generate_thumbnail
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: msrest.exceptions.HttpOperationError
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.generate_thumbnail_in_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: generate_thumbnail_in_stream
  source:
    id: generate_thumbnail_in_stream
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 839
  summary: 'This operation generates a thumbnail image with the user-specified

    width and height. By default, the service analyzes the image,

    identifies the region of interest (ROI), and generates smart cropping

    coordinates based on the ROI. Smart cropping helps when you specify an

    aspect ratio that differs from that of the input image. A successful

    response contains the thumbnail image binary. If the request failed,

    the response contains an error code and a message to help determine

    what went wrong.

    '
  syntax:
    content: generate_thumbnail_in_stream(width, height, image, smart_cropping=False,
      custom_headers=None, raw=False, callback=None, **operation_config)
    parameters:
    - description: 'Width of the thumbnail. It must be between 1 and 1024.

        Recommended minimum of 50.

        '
      id: width
      type:
      - int
    - description: 'Height of the thumbnail. It must be between 1 and 1024.

        Recommended minimum of 50.

        '
      id: height
      type:
      - int
    - description: 'An image stream.

        '
      id: image
      type:
      - Generator
    - defaultValue: 'False'
      description: 'Boolean flag for enabling smart cropping.

        '
      id: smart_cropping
      type:
      - bool
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.

        '
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'object or ClientRawResponse if raw=true

        '
      type:
      - Generator
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.generate_thumbnail_in_stream
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.get_text_operation_result
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: get_text_operation_result
  source:
    id: get_text_operation_result
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 688
  summary: 'This interface is used for getting text operation result. The URL to

    this interface should be retrieved from ''Operation-Location'' field

    returned from Recognize Text interface.

    '
  syntax:
    content: get_text_operation_result(operation_id, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Id of the text operation returned in the response

        of the ''Recognize Text''

        '
      id: operation_id
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'TextOperationResult or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.TextOperationResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.get_text_operation_result
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.list_models
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: list_models
  source:
    id: list_models
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 84
  summary: 'This operation returns the list of domain-specific models that are

    supported by the Computer Vision API.  Currently, the API only supports

    one domain-specific model: a celebrity recognizer. A successful

    response will be returned in JSON.  If the request failed, the response

    will contain an error code and a message to help understand what went

    wrong.

    '
  syntax:
    content: list_models(custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'ListModelsResult or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.ListModelsResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.list_models
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_printed_text
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: recognize_printed_text
  source:
    id: recognize_printed_text
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 316
  summary: 'Optical Character Recognition (OCR) detects printed text in an image

    and extracts the recognized characters into a machine-usable character

    stream.   Upon success, the OCR results will be returned. Upon failure,

    the error code together with an error message will be returned. The

    error code can be one of InvalidImageUrl, InvalidImageFormat,

    InvalidImageSize, NotSupportedImage,  NotSupportedLanguage, or

    InternalServerError.

    '
  syntax:
    content: recognize_printed_text(url, detect_orientation=True, language='unk',
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Whether detect the text orientation in the

        image. With detectOrientation=true the OCR service tries to detect the

        image orientation and correct it before further processing (e.g. if

        it''s upside-down).

        '
      id: detect_orientation
      type:
      - bool
    - defaultValue: 'True'
      description: 'Publicly reachable URL of an image

        '
      id: url
      type:
      - str
    - defaultValue: unk
      description: 'The BCP-47 language code of the text to be detected

        in the image. The default value is ''unk''. Possible values include:

        ''unk'', ''zh-Hans'', ''zh-Hant'', ''cs'', ''da'', ''nl'', ''en'', ''fi'',
        ''fr'', ''de'',

        ''el'', ''hu'', ''it'', ''ja'', ''ko'', ''nb'', ''pl'', ''pt'', ''ru'', ''es'',
        ''sv'',

        ''tr'', ''ar'', ''ro'', ''sr-Cyrl'', ''sr-Latn'', ''sk''

        '
      id: language
      type:
      - str
      - azure.cognitiveservices.vision.computervision.models.OcrLanguages
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'OcrResult or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.OcrResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_printed_text
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_printed_text_in_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: recognize_printed_text_in_stream
  source:
    id: recognize_printed_text_in_stream
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 918
  summary: 'Optical Character Recognition (OCR) detects printed text in an image

    and extracts the recognized characters into a machine-usable character

    stream.   Upon success, the OCR results will be returned. Upon failure,

    the error code together with an error message will be returned. The

    error code can be one of InvalidImageUrl, InvalidImageFormat,

    InvalidImageSize, NotSupportedImage,  NotSupportedLanguage, or

    InternalServerError.

    '
  syntax:
    content: recognize_printed_text_in_stream(image, detect_orientation=True, language='unk',
      custom_headers=None, raw=False, callback=None, **operation_config)
    parameters:
    - description: 'Whether detect the text orientation in the

        image. With detectOrientation=true the OCR service tries to detect the

        image orientation and correct it before further processing (e.g. if

        it''s upside-down).

        '
      id: detect_orientation
      type:
      - bool
    - defaultValue: 'True'
      description: 'An image stream.

        '
      id: image
      type:
      - Generator
    - defaultValue: unk
      description: 'The BCP-47 language code of the text to be detected

        in the image. The default value is ''unk''. Possible values include:

        ''unk'', ''zh-Hans'', ''zh-Hant'', ''cs'', ''da'', ''nl'', ''en'', ''fi'',
        ''fr'', ''de'',

        ''el'', ''hu'', ''it'', ''ja'', ''ko'', ''nb'', ''pl'', ''pt'', ''ru'', ''es'',
        ''sv'',

        ''tr'', ''ar'', ''ro'', ''sr-Cyrl'', ''sr-Latn'', ''sk''

        '
      id: language
      type:
      - str
      - azure.cognitiveservices.vision.computervision.models.OcrLanguages
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.

        '
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'OcrResult or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.OcrResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_printed_text_in_stream
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_text
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: recognize_text
  source:
    id: recognize_text
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 627
  summary: 'Recognize Text operation. When you use the Recognize Text interface,

    the response contains a field called ''Operation-Location''. The

    ''Operation-Location'' field contains the URL that you must use for your

    Get Recognize Text Operation Result operation.

    '
  syntax:
    content: recognize_text(url, mode, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Type of text to recognize. Possible values include:

        ''Handwritten'', ''Printed''

        '
      id: mode
      type:
      - str
      - azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
    - description: 'Publicly reachable URL of an image

        '
      id: url
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'None or ClientRawResponse if raw=true

        '
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_text
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_text_in_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: recognize_text_in_stream
  source:
    id: recognize_text_in_stream
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1241
  summary: 'Recognize Text operation. When you use the Recognize Text interface,

    the response contains a field called ''Operation-Location''. The

    ''Operation-Location'' field contains the URL that you must use for your

    Get Recognize Text Operation Result operation.

    '
  syntax:
    content: recognize_text_in_stream(image, mode, custom_headers=None, raw=False,
      callback=None, **operation_config)
    parameters:
    - description: 'An image stream.

        '
      id: image
      type:
      - Generator
    - description: 'Type of text to recognize. Possible values include:

        ''Handwritten'', ''Printed''

        '
      id: mode
      type:
      - str
      - azure.cognitiveservices.vision.computervision.models.TextRecognitionMode
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.

        '
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'None or ClientRawResponse if raw=true

        '
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_text_in_stream
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.tag_image
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: tag_image
  source:
    id: tag_image
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 476
  summary: 'This operation generates a list of words, or tags, that are relevant to

    the content of the supplied image. The Computer Vision API can return

    tags based on objects, living beings, scenery or actions found in

    images. Unlike categories, tags are not organized according to a

    hierarchical classification system, but correspond to image content.

    Tags may contain hints to avoid ambiguity or provide context, for

    example the tag ''cello'' may be accompanied by the hint ''musical

    instrument''. All tags are in English.

    '
  syntax:
    content: tag_image(url, language='en', custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Publicly reachable URL of an image

        '
      id: url
      type:
      - str
    - defaultValue: en
      description: 'The desired language for output generation. If this

        parameter is not specified, the default value is

        &quot;en&quot;.Supported languages:en - English, Default. es -

        Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese.

        Possible values include: ''en'', ''es'', ''ja'', ''pt'', ''zh''

        '
      id: language
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'TagResult or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.TagResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.tag_image
- class: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  exceptions:
  - type: azure.cognitiveservices.vision.computervision.models.ComputerVisionErrorException
  fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.tag_image_in_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision
  name: tag_image_in_stream
  source:
    id: tag_image_in_stream
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\computer_vision_api.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 1084
  summary: 'This operation generates a list of words, or tags, that are relevant to

    the content of the supplied image. The Computer Vision API can return

    tags based on objects, living beings, scenery or actions found in

    images. Unlike categories, tags are not organized according to a

    hierarchical classification system, but correspond to image content.

    Tags may contain hints to avoid ambiguity or provide context, for

    example the tag ''cello'' may be accompanied by the hint ''musical

    instrument''. All tags are in English.

    '
  syntax:
    content: tag_image_in_stream(image, language='en', custom_headers=None, raw=False,
      callback=None, **operation_config)
    parameters:
    - description: 'An image stream.

        '
      id: image
      type:
      - Generator
    - defaultValue: en
      description: 'The desired language for output generation. If this

        parameter is not specified, the default value is

        &quot;en&quot;.Supported languages:en - English, Default. es -

        Spanish, ja - Japanese, pt - Portuguese, zh - Simplified Chinese.

        Possible values include: ''en'', ''es'', ''ja'', ''pt'', ''zh''

        '
      id: language
      type:
      - str
    - defaultValue: None
      description: 'headers that will be added to the request

        '
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response

        '
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.

        '
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.

        '
      id: operation_config
    return:
      description: 'TagResult or ClientRawResponse if raw=true

        '
      type:
      - azure.cognitiveservices.vision.computervision.models.TagResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.tag_image_in_stream
references:
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image
  isExternal: false
  name: analyze_image
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_by_domain
  isExternal: false
  name: analyze_image_by_domain
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_by_domain
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_by_domain_in_stream
  isExternal: false
  name: analyze_image_by_domain_in_stream
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_by_domain_in_stream
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_in_stream
  isExternal: false
  name: analyze_image_in_stream
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.analyze_image_in_stream
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.describe_image
  isExternal: false
  name: describe_image
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.describe_image
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.describe_image_in_stream
  isExternal: false
  name: describe_image_in_stream
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.describe_image_in_stream
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.generate_thumbnail
  isExternal: false
  name: generate_thumbnail
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.generate_thumbnail
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.generate_thumbnail_in_stream
  isExternal: false
  name: generate_thumbnail_in_stream
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.generate_thumbnail_in_stream
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.get_text_operation_result
  isExternal: false
  name: get_text_operation_result
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.get_text_operation_result
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.list_models
  isExternal: false
  name: list_models
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.list_models
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_printed_text
  isExternal: false
  name: recognize_printed_text
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_printed_text
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_printed_text_in_stream
  isExternal: false
  name: recognize_printed_text_in_stream
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_printed_text_in_stream
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_text
  isExternal: false
  name: recognize_text
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_text
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_text_in_stream
  isExternal: false
  name: recognize_text_in_stream
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.recognize_text_in_stream
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.tag_image
  isExternal: false
  name: tag_image
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.tag_image
- fullName: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.tag_image_in_stream
  isExternal: false
  name: tag_image_in_stream
  parent: azure.cognitiveservices.vision.computervision.ComputerVisionAPI
  uid: azure.cognitiveservices.vision.computervision.ComputerVisionAPI.tag_image_in_stream
- fullName: list[str
  name: list[str
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  uid: list[str
- fullName: azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes]
  name: VisualFeatureTypes]
  spec.python:
  - fullName: azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes
    name: VisualFeatureTypes
    uid: azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes
  - fullName: ']'
    name: ']'
  uid: azure.cognitiveservices.vision.computervision.models.VisualFeatureTypes]
- fullName: list[str
  name: list[str
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  uid: list[str
- fullName: azure.cognitiveservices.vision.computervision.models.Details]
  name: Details]
  spec.python:
  - fullName: azure.cognitiveservices.vision.computervision.models.Details
    name: Details
    uid: azure.cognitiveservices.vision.computervision.models.Details
  - fullName: ']'
    name: ']'
  uid: azure.cognitiveservices.vision.computervision.models.Details]
- fullName: Callable[Bytes, response=None]
  name: Callable[Bytes, response=None]
  spec.python:
  - fullName: Callable
    name: Callable
    uid: Callable
  - fullName: '['
    name: '['
  - fullName: Bytes
    name: Bytes
    uid: Bytes
  - fullName: ', '
    name: ', '
  - fullName: response=None
    name: response=None
    uid: response=None
  - fullName: ']'
    name: ']'
  uid: Callable[Bytes, response=None]
