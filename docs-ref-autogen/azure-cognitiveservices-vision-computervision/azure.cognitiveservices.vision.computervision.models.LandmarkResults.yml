### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.cognitiveservices.vision.computervision.models.LandmarkResults
  fullName: azure.cognitiveservices.vision.computervision.models.LandmarkResults
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.cognitiveservices.vision.computervision.models
  name: LandmarkResults
  source:
    id: LandmarkResults
    path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\models\landmark_results_py3.py
    remote:
      branch: master
      path: azure-cognitiveservices-vision-computervision\azure\cognitiveservices\vision\computervision\models\landmark_results_py3.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'List of landmarks recognized in the image.

    '
  syntax:
    content: 'LandmarkResults(*, landmarks=None, request_id: str = None, metadata=None,
      **kwargs) -> None'
    parameters:
    - description: ''
      id: landmarks
      type:
      - list[azure.cognitiveservices.vision.computervision.models.LandmarksModel]
    - description: 'Id of the REST API request.

        '
      id: request_id
      type:
      - str
    - description: ''
      id: metadata
      type:
      - azure.cognitiveservices.vision.computervision.models.ImageMetadata
  type: class
  uid: azure.cognitiveservices.vision.computervision.models.LandmarkResults
references:
- fullName: list[azure.cognitiveservices.vision.computervision.models.LandmarksModel]
  name: list[LandmarksModel]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.vision.computervision.models.LandmarksModel
    name: LandmarksModel
    uid: azure.cognitiveservices.vision.computervision.models.LandmarksModel
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.vision.computervision.models.LandmarksModel]
