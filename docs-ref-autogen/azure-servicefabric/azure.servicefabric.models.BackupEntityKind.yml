### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicefabric.models.BackupEntityKind.partition
  - azure.servicefabric.models.BackupEntityKind.application
  - azure.servicefabric.models.BackupEntityKind.invalid
  - azure.servicefabric.models.BackupEntityKind.service
  class: azure.servicefabric.models.BackupEntityKind
  fullName: azure.servicefabric.models.BackupEntityKind
  inheritance:
  - inheritance:
    - type: builtins.object
    type: builtins.str
  - inheritance:
    - type: builtins.object
    type: enum.Enum
  langs:
  - python
  module: azure.servicefabric.models
  name: BackupEntityKind
  source:
    id: BackupEntityKind
    path: azure-servicefabric\azure\servicefabric\models\service_fabric_client_ap_is_enums.py
    remote:
      branch: master
      path: azure-servicefabric\azure\servicefabric\models\service_fabric_client_ap_is_enums.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 804
  summary: 'An enumeration.





    '
  syntax: {}
  type: class
  uid: azure.servicefabric.models.BackupEntityKind
- class: azure.servicefabric.models.BackupEntityKind
  fullName: azure.servicefabric.models.BackupEntityKind.partition
  langs:
  - python
  module: azure.servicefabric.models
  name: partition
  source:
    id: partition
    path: null
    remote:
      branch: master
      path: null
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: null
  summary: 'Search for the separator sep in S, and return the part before it,

    the separator itself, and the part after it.  If the separator is not

    found, return S and two empty strings.

    '
  syntax: {}
  type: attribute
  uid: azure.servicefabric.models.BackupEntityKind.partition
- class: azure.servicefabric.models.BackupEntityKind
  fullName: azure.servicefabric.models.BackupEntityKind.application
  langs:
  - python
  module: azure.servicefabric.models
  name: application
  syntax:
    content: application = 'Application'
  type: attribute
  uid: azure.servicefabric.models.BackupEntityKind.application
- class: azure.servicefabric.models.BackupEntityKind
  fullName: azure.servicefabric.models.BackupEntityKind.invalid
  langs:
  - python
  module: azure.servicefabric.models
  name: invalid
  syntax:
    content: invalid = 'Invalid'
  type: attribute
  uid: azure.servicefabric.models.BackupEntityKind.invalid
- class: azure.servicefabric.models.BackupEntityKind
  fullName: azure.servicefabric.models.BackupEntityKind.service
  langs:
  - python
  module: azure.servicefabric.models
  name: service
  syntax:
    content: service = 'Service'
  type: attribute
  uid: azure.servicefabric.models.BackupEntityKind.service
references:
- fullName: azure.servicefabric.models.BackupEntityKind.partition
  isExternal: false
  name: partition
  parent: azure.servicefabric.models.BackupEntityKind
  uid: azure.servicefabric.models.BackupEntityKind.partition
- fullName: azure.servicefabric.models.BackupEntityKind.application
  isExternal: false
  name: application
  parent: azure.servicefabric.models.BackupEntityKind
  uid: azure.servicefabric.models.BackupEntityKind.application
- fullName: azure.servicefabric.models.BackupEntityKind.invalid
  isExternal: false
  name: invalid
  parent: azure.servicefabric.models.BackupEntityKind
  uid: azure.servicefabric.models.BackupEntityKind.invalid
- fullName: azure.servicefabric.models.BackupEntityKind.service
  isExternal: false
  name: service
  parent: azure.servicefabric.models.BackupEntityKind
  uid: azure.servicefabric.models.BackupEntityKind.service
