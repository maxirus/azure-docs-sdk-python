### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.servicefabric.models.TestErrorChaosEvent
  fullName: azure.servicefabric.models.TestErrorChaosEvent
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.servicefabric.models.chaos_event_py3.ChaosEvent
  langs:
  - python
  module: azure.servicefabric.models
  name: TestErrorChaosEvent
  source:
    id: TestErrorChaosEvent
    path: azure-servicefabric\azure\servicefabric\models\test_error_chaos_event_py3.py
    remote:
      branch: master
      path: azure-servicefabric\azure\servicefabric\models\test_error_chaos_event_py3.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 15
  summary: 'Describes a Chaos event that gets generated when an unexpected event occurs

    in the Chaos engine.

    For example, due to the cluster snapshot being inconsistent, while faulting

    an entity, Chaos found that the entity was already faulted -- which would

    be an unexpected event.


    All required parameters must be populated in order to send to Azure.

    '
  syntax:
    content: 'TestErrorChaosEvent(*, time_stamp_utc, reason: str = None, **kwargs)
      -> None'
    parameters:
    - description: 'Required. The UTC timestamp when this Chaos event

        was generated.

        '
      id: time_stamp_utc
      type:
      - datetime
    - description: 'Required. Constant filled by server.

        '
      id: kind
      type:
      - str
    - description: 'Describes why TestErrorChaosEvent was generated. For

        example, Chaos tries to fault a partition but finds that the partition is

        no longer fault tolerant, then a TestErrorEvent gets generated with the

        reason stating that the partition is not fault tolerant.

        '
      id: reason
      type:
      - str
  type: class
  uid: azure.servicefabric.models.TestErrorChaosEvent
references: []
