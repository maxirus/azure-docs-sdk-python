### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicefabric.models.ApplicationTypeStatus.available
  - azure.servicefabric.models.ApplicationTypeStatus.failed
  - azure.servicefabric.models.ApplicationTypeStatus.invalid
  - azure.servicefabric.models.ApplicationTypeStatus.provisioning
  - azure.servicefabric.models.ApplicationTypeStatus.unprovisioning
  class: azure.servicefabric.models.ApplicationTypeStatus
  fullName: azure.servicefabric.models.ApplicationTypeStatus
  inheritance:
  - inheritance:
    - type: builtins.object
    type: builtins.str
  - inheritance:
    - type: builtins.object
    type: enum.Enum
  langs:
  - python
  module: azure.servicefabric.models
  name: ApplicationTypeStatus
  source:
    id: ApplicationTypeStatus
    path: azure-servicefabric\azure\servicefabric\models\service_fabric_client_ap_is_enums.py
    remote:
      branch: master
      path: azure-servicefabric\azure\servicefabric\models\service_fabric_client_ap_is_enums.py
      repo: https://github.com/Azure/azure-sdk-for-python.git
    startLine: 56
  summary: 'An enumeration.






    '
  syntax: {}
  type: class
  uid: azure.servicefabric.models.ApplicationTypeStatus
- class: azure.servicefabric.models.ApplicationTypeStatus
  fullName: azure.servicefabric.models.ApplicationTypeStatus.available
  langs:
  - python
  module: azure.servicefabric.models
  name: available
  syntax:
    content: available = 'Available'
  type: attribute
  uid: azure.servicefabric.models.ApplicationTypeStatus.available
- class: azure.servicefabric.models.ApplicationTypeStatus
  fullName: azure.servicefabric.models.ApplicationTypeStatus.failed
  langs:
  - python
  module: azure.servicefabric.models
  name: failed
  syntax:
    content: failed = 'Failed'
  type: attribute
  uid: azure.servicefabric.models.ApplicationTypeStatus.failed
- class: azure.servicefabric.models.ApplicationTypeStatus
  fullName: azure.servicefabric.models.ApplicationTypeStatus.invalid
  langs:
  - python
  module: azure.servicefabric.models
  name: invalid
  syntax:
    content: invalid = 'Invalid'
  type: attribute
  uid: azure.servicefabric.models.ApplicationTypeStatus.invalid
- class: azure.servicefabric.models.ApplicationTypeStatus
  fullName: azure.servicefabric.models.ApplicationTypeStatus.provisioning
  langs:
  - python
  module: azure.servicefabric.models
  name: provisioning
  syntax:
    content: provisioning = 'Provisioning'
  type: attribute
  uid: azure.servicefabric.models.ApplicationTypeStatus.provisioning
- class: azure.servicefabric.models.ApplicationTypeStatus
  fullName: azure.servicefabric.models.ApplicationTypeStatus.unprovisioning
  langs:
  - python
  module: azure.servicefabric.models
  name: unprovisioning
  syntax:
    content: unprovisioning = 'Unprovisioning'
  type: attribute
  uid: azure.servicefabric.models.ApplicationTypeStatus.unprovisioning
references:
- fullName: azure.servicefabric.models.ApplicationTypeStatus.available
  isExternal: false
  name: available
  parent: azure.servicefabric.models.ApplicationTypeStatus
  uid: azure.servicefabric.models.ApplicationTypeStatus.available
- fullName: azure.servicefabric.models.ApplicationTypeStatus.failed
  isExternal: false
  name: failed
  parent: azure.servicefabric.models.ApplicationTypeStatus
  uid: azure.servicefabric.models.ApplicationTypeStatus.failed
- fullName: azure.servicefabric.models.ApplicationTypeStatus.invalid
  isExternal: false
  name: invalid
  parent: azure.servicefabric.models.ApplicationTypeStatus
  uid: azure.servicefabric.models.ApplicationTypeStatus.invalid
- fullName: azure.servicefabric.models.ApplicationTypeStatus.provisioning
  isExternal: false
  name: provisioning
  parent: azure.servicefabric.models.ApplicationTypeStatus
  uid: azure.servicefabric.models.ApplicationTypeStatus.provisioning
- fullName: azure.servicefabric.models.ApplicationTypeStatus.unprovisioning
  isExternal: false
  name: unprovisioning
  parent: azure.servicefabric.models.ApplicationTypeStatus
  uid: azure.servicefabric.models.ApplicationTypeStatus.unprovisioning
